#定义 root category 的属性 
log4cpp.rootCategory=ERROR 

#定义 console 属性 
log4cpp.appender.console=ConsoleAppender 
log4cpp.appender.console.layout=PatternLayout 
log4cpp.appender.console.layout.ConversionPattern=%d [%p] - %m%n 

#定义 sample category 的属性 
log4cpp.category.monagent=DEBUG,agent 


log4cpp.appender.agent=RollingFileAppender

#当日志文件到达maxFileSize大小时，将会自动滚动
log4cpp.appender.agent.maxFileSize=400000

#maxBackupIndex指定可以产生的滚动文件的最大数
log4cpp.appender.agent.maxBackupIndex=3

#fileName指定信息输出到logs/agent.txt文件
log4cpp.appender.agent.fileName=../logs/agent.log

#PatternLayout 表示可以灵活指定布局模式
log4cpp.appender.agent.layout=PatternLayout

#append=true 信息追加到上面指定的日志文件中，false表示将信息覆盖指定文件内容
log4cpp.appender.agent.append=true
log4cpp.appender.agent.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S.%l} - %p] (%c): %m%n 

#定义 sample category 的属性 
log4cpp.category.agentbackup=DEBUG,agent 


log4cpp.appender.agent=RollingFileAppender

#当日志文件到达maxFileSize大小时，将会自动滚动
log4cpp.appender.agent.maxFileSize=1000000000

#maxBackupIndex指定可以产生的滚动文件的最大数
log4cpp.appender.agent.maxBackupIndex=10

#fileName指定信息输出到logs/agent.txt文件
log4cpp.appender.agent.fileName=../backup/agent.log

#PatternLayout 表示可以灵活指定布局模式
log4cpp.appender.agent.layout=PatternLayout

#append=true 信息追加到上面指定的日志文件中，false表示将信息覆盖指定文件内容
log4cpp.appender.agent.append=true
log4cpp.appender.agent.layout.ConversionPattern=%p
